{
  "workbench.colorTheme": "Overnight Slumber Italics",
  "workbench.editor.showTabs": "multiple",
  "workbench.editor.tabSizing": "fit",
  "workbench.tree.indent": 16,
  "editor.fontFamily": "'MonoLisa Nerd Font', 'Operator Mono Book'",
  "editor.lineHeight": 28,
  "editor.fontSize": 16,
  "editor.fontWeight": "400",
  "editor.smoothScrolling": true,
  "editor.bracketPairColorization.enabled": false,
  "editor.minimap.enabled": false,
  "editor.tabSize": 2,
  "editor.lineNumbers": "relative",
  "editor.folding": true,
  // "editor.glyphMargin": false,
  "editor.guides.indentation": false,
  "editor.fontLigatures": "'calt' on, 'liga' on, 'zero' on, 'ss02' on",
  "editor.cursorSurroundingLines": 4,
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": {
    "source.organizeImports": true
  },
  "breadcrumbs.enabled": false,
  "window.title": "${dirty}${activeEditorShort}",
  "terminal.integrated.fontFamily": "'MonoLisa Nerd Font'",
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.gpuAcceleration": "auto",
  "[json]": {
    "editor.quickSuggestions": {
      "strings": true
    },
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true
  },
  "[javascript]": {
    "editor.maxTokenizationLineLength": 2500,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[typescript]": {
    "editor.maxTokenizationLineLength": 2500,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.maxTokenizationLineLength": 2500,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact]": {
    "editor.maxTokenizationLineLength": 2500,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[prisma]": {
    "editor.defaultFormatter": "Prisma.prisma",
    "editor.formatOnSave": true
  },
  "explorer.confirmDragAndDrop": false,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "vim.easymotion": false,
  "vim.surround": true,
  "vim.sneak": true,
  "vim.leader": "<space>",
  "vim.foldfix": true,
  "vim.hlsearch": true,
  "vim.useSystemClipboard": true,
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.duration": 250,
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false,
    "<C-p>": false
  },
  "vim.normalModeKeyBindings": [
    // Regular remappings
    {
      "before": ["<c-w>", "s"],
      "commands": ["workbench.action.splitEditor"]
    },
    {
      "before": ["<c-w>", "S"],
      "commands": ["workbench.action.splitEditorDown"]
    },
    {
      "before": ["<c-h>"],
      "after": ["<c-w>", "h"]
    },
    {
      "before": ["<c-j>"],
      "after": ["<c-w>", "j"]
    },
    {
      "before": ["<c-k>"],
      "after": ["<c-w>", "k"]
    },
    {
      "before": ["<c-l>"],
      "after": ["<c-w>", "l"]
    },
    {
      "before": ["<c-b>"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<c-a-b>"],
      "commands": ["workbench.action.toggleAuxiliaryBar"]
    },
    {
      // list open files
      "before": ["<leader>", "f", "e"],
      "commands": ["workbench.action.openRecent"]
    },
    // LSP key bindings
    {
      "before": ["K"],
      "commands": ["editor.action.showHover"]
    },
    {
      "before": ["g", "d"],
      "commands": ["editor.action.revealDefinition"]
    },
    {
      "before": ["<leader>", "f", "s"],
      "commands": ["workbench.action.showAllSymbols"]
    },
    {
      "before": ["<leader>", "x", "x"],
      "commands": ["workbench.actions.view.problems"]
    },
    {
      "before": ["<leader>", "c", "a"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["leader", "r", "n"],
      "commands": ["editor.action.rename"]
    },
    {
      "before": ["[", "d"],
      "commands": ["editor.action.marker.prev"]
    },
    {
      "before": ["]", "d"],
      "commands": ["editor.action.marker.next"]
    }
  ],
  "workbench.colorCustomizations": {
    "[Night Owl]": {
      "activityBar.background": "#000C1D",
      "activityBar.border": "#102a44",
      "editorGroup.border": "#102a44",
      "sideBar.background": "#001122",
      "editorCursor.foreground": "#FAF39F",
      "sideBar.border": "#102a44",
      "sideBar.foreground": "#8BADC1"
    },
    "[Night Owl (No Italics)]": {
      "activityBar.background": "#000C1D",
      "activityBar.border": "#102a44",
      "editorGroup.border": "#102a44",
      "editorCursor.foreground": "#FAF39F",
      "sideBar.background": "#001122",
      "sideBar.border": "#102a44",
      "sideBar.foreground": "#8BADC1"
    }
  },
  "editor.tokenColorCustomizations": {
    "[Night Owl]": {
      "textMateRules": [
        {
          "name": "Italic font style",
          "scope": [
            "storage.type.js",
            "storage.type.ts",
            "storage.type.tsx",
            "storage.type.class.js",
            "storage.type.class.ts",
            "storage.type.class.tsx",
            "storage.type.function.js",
            "storage.type.function.ts",
            "storage.type.function.tsx",
            "storage.type.type.ts",
            "storage.type.type.tsx",
            "keyword.control.conditional.js",
            "keyword.control.conditional.ts",
            "keyword.control.conditional.tsx",
            "support.type.property-name.json",
            "support.type.property-name.css",
            "variable.other.assignment.prisma",
            "storage.type.model.prisma",
            "storage.type.config.prisma",
            "entity.name.tag.yaml",
            "variable.other.env",
            "keyword.other.sql"
          ],
          "settings": {
            "fontStyle": "italic"
          }
        },
        {
          "name": "Normal font style",
          "scope": [
            "variable.other.constant.js",
            "variable.other.constant.ts",
            "variable.other.constant.tsx",
            "entity.name.function.js",
            "entity.name.function.ts",
            "entity.name.function.tsx"
          ],
          "settings": {
            "fontStyle": ""
          }
        },
        {
          "scope": [
            "punctuation.support.type.property-name.begin.json",
            "punctuation.support.type.property-name.end.json",
            "punctuation.accessor.js",
            "punctuation.accessor.ts",
            "punctuation.accessor.tsx",
            "punctuation.accessor.optional.js",
            "punctuation.accessor.optional.ts",
            "punctuation.accessor.optional.tsx",
            "punctuation.separator.key-value.mapping.yaml"
          ],
          "settings": {
            "foreground": "#7FDBCA80"
          }
        },
        {
          "scope": [
            "punctuation.separator.dictionary.key-value.json",
            "punctuation.definition.dictionary.begin.json",
            "punctuation.definition.dictionary.end.json",
            "punctuation.definition.array.begin.json",
            "punctuation.definition.array.end.json",
            "punctuation.separator.dictionary.pair.json",
            "punctuation.separator.array.json"
          ],
          "settings": {
            "foreground": "#CAECE680"
          }
        },
        {
          "scope": [
            "punctuation.definition.string.begin.json",
            "punctuation.definition.string.end.json",
            "punctuation.separator.key-value.js",
            "punctuation.separator.key-value.ts",
            "punctuation.separator.key-value.tsx"
          ],
          "settings": {
            "foreground": "#C789D680"
          }
        },
        {
          "name": "Not so important tokens",
          "scope": [
            "keyword.operator.assignment.js",
            "keyword.operator.assignment.ts",
            "keyword.operator.assignment.tsx",
            "keyword.operator.ternary.js",
            "keyword.operator.ternary.ts",
            "keyword.operator.ternary.tsx",
            "punctuation.separator.comma.js",
            "punctuation.separator.comma.ts",
            "punctuation.separator.comma.tsx",
            "punctuation.definition.template-expression.begin.js",
            "punctuation.definition.template-expression.end.js",
            "punctuation.section.embedded.begin.js",
            "punctuation.section.embedded.begin.ts",
            "punctuation.section.embedded.begin.tsx",
            "punctuation.section.embedded.end.js",
            "punctuation.section.embedded.end.ts",
            "punctuation.section.embedded.end.tsx",
            "punctuation.definition.binding-pattern.array.js",
            "punctuation.definition.binding-pattern.array.ts",
            "punctuation.definition.binding-pattern.array.tsx",
            "punctuation.separator.comma.js",
            "punctuation.definition.block.js",
            "punctuation.definition.block.ts",
            "punctuation.definition.block.tsx",
            "punctuation.definition.binding-pattern.object.js",
            "punctuation.definition.binding-pattern.object.ts",
            "punctuation.definition.binding-pattern.object.tsx",
            "punctuation.definition.parameters.begin.js",
            "punctuation.definition.parameters.begin.ts",
            "punctuation.definition.parameters.begin.tsx",
            "punctuation.definition.parameters.end.js",
            "punctuation.definition.parameters.end.ts",
            "punctuation.definition.parameters.end.tsx",
            "storage.type.function.arrow.js",
            "storage.type.function.arrow.ts",
            "storage.type.function.arrow.tsx",
            "punctuation.separator.parameter.js"
          ],
          "settings": {
            "foreground": "#D7DBE0AB"
          }
        },
        {
          "name": "Not important tokens",
          "scope": [
            "punctuation.separator.comma.ts",
            "punctuation.terminator.statement.js",
            "punctuation.terminator.statement.ts",
            "punctuation.terminator.statement.tsx",
            "meta.brace.round.js",
            "meta.brace.round.ts",
            "meta.brace.round.tsx",
            "punctuation.definition.tag.prisma",
            "punctuation.section.property-list.begin.bracket.curly.css",
            "punctuation.section.property-list.end.bracket.curly.css",
            "punctuation.terminator.rule.css",
            "punctuation.separator.list.comma.css",
            "punctuation.terminator.tailwind.tailwind"
          ],
          "settings": {
            "foreground": "#D7DBE050"
          }
        },
        {
          "scope": [
            "support.class.component.js",
            "support.class.component.ts",
            "support.class.component.tsx"
          ],
          "settings": {
            "foreground": "#CAECE6"
          }
        },
        {
          "scope": [
            "punctuation.definition.string.template.begin.js",
            "punctuation.definition.string.template.begin.ts",
            "punctuation.definition.string.template.begin.tsx",
            "punctuation.definition.string.template.end.js",
            "punctuation.definition.string.template.end.ts",
            "punctuation.definition.string.template.end.tsx",
            "punctuation.definition.string.begin.js",
            "punctuation.definition.string.begin.ts",
            "punctuation.definition.string.begin.tsx",
            "punctuation.definition.string.end.js",
            "punctuation.definition.string.end.ts",
            "punctuation.definition.string.end.tsx",
            "punctuation.definition.typeparameters.begin.tsx",
            "punctuation.definition.typeparameters.end.tsx",
            "string.quoted.double.end.prisma",
            "string.quoted.double.start.prisma",
            "punctuation.definition.string.begin.yaml",
            "punctuation.definition.string.end.yaml"
          ],
          "settings": {
            "foreground": "#ECC48D80"
          }
        },
        {
          "name": "Imports",
          "scope": [
            "meta.import.js string",
            "meta.import.js variable",
            "meta.import.js meta.block variable.other",
            "meta.import.tsx",
            "meta.import.tsx string",
            "meta.import.tsx variable",
            "meta.import.tsx meta.block variable.other",
            "meta.import.ts",
            "meta.import.ts string",
            "meta.import.ts variable",
            "meta.import.ts meta.block variable.other",
            "meta.import.ts keyword.control.type.ts",
            "meta.import.tsx keyword.control.type.tsx",
            "meta.import.ts variable.other.readwrite.alias.ts",
            "meta.import.tsx variable.other.readwrite.alias.tsx",
            "meta.import.js string.quoted.single.js",
            "meta.import.ts string.quoted.single.ts",
            "meta.import.tsx string.quoted.single.tsx",
            "meta.import.js string.quoted.double.js",
            "meta.import.ts string.quoted.double.ts",
            "meta.import.tsx string.quoted.double.tsx",
            "meta.import.js variable.other.readwrite.alias.js",
            "meta.import.js constant.language.import-export-all.js",
            "meta.export.js variable.other.readwrite.alias.js",
            "meta.export.js string.quoted.single.js",
            "meta.export.js keyword.control.default.js",
            "constant.language.import-export-all.ts",
            "constant.language.import-export-all.tsx"
          ],
          "settings": {
            "foreground": "#8BADC1"
          }
        },
        {
          "scope": [
            "meta.import.js",
            "punctuation.terminator.statement.js",
            "punctuation.terminator.statement.ts",
            "punctuation.terminator.statement.tsx",
            "keyword.control.import.js",
            "keyword.control.from.js",
            "keyword.control.import.tsx",
            "keyword.control.from.tsx",
            "keyword.control.import.ts",
            "keyword.control.from.ts",
            "meta.import.ts punctuation.definition.block.ts",
            "meta.import.tsx punctuation.definition.block.tsx",
            "meta.import.js punctuation.definition.string.begin.js",
            "meta.import.js punctuation.definition.string.end.js",
            "meta.import.tsx punctuation.definition.string.begin.tsx",
            "meta.import.tsx punctuation.definition.string.end.tsx",
            "meta.import.ts punctuation.definition.string.begin.ts",
            "meta.import.ts punctuation.definition.string.end.ts",
            "meta.import.js punctuation.definition.block.js",
            "meta.import.ts punctuation.definition.block.ts",
            "meta.import.tsx punctuation.definition.block.tsx",
            "meta.import.js punctuation.separator.comma.js",
            "meta.import.ts punctuation.separator.comma.ts",
            "meta.import.tsx punctuation.separator.comma.tsx",
            "meta.export.js keyword.control.export.js",
            "meta.export.js punctuation.definition.block.js",
            "meta.export.js punctuation.definition.string.begin.js",
            "meta.export.js punctuation.definition.string.end.js",
            "keyword.control.as.js",
            "keyword.control.as.ts",
            "keyword.control.as.tsx",
            "comment.line.double-slash.js",
            "comment.line.double-slash.ts",
            "comment.line.double-slash.tsx",
            "comment.block.documentation.js",
            "comment.block.documentation.ts",
            "comment.block.documentation.tsx"
          ],
          "settings": {
            "foreground": "#8BADC180"
          }
        }
      ]
    },
    "[Overnight Slumber Italics]": {
      "textMateRules": [
        {
          "name": "Symbols",
          "scope": ["meta.brace.round.js"],
          "settings": {
            "foreground": "#8EACE380"
          }
        },
        {
          "name": "Quotes",
          "scope": [
            "punctuation.definition.string.begin.js",
            "punctuation.definition.string.end.js"
          ],
          "settings": {
            "foreground": "#ECC48D80"
          }
        },
        {
          "name": "Not so important tokens",
          "scope": [
            "keyword.operator.assignment.js",
            "keyword.operator.assignment.ts",
            "keyword.operator.assignment.tsx",
            "keyword.operator.ternary.js",
            "keyword.operator.ternary.ts",
            "keyword.operator.ternary.tsx",
            "punctuation.separator.comma.js",
            "punctuation.separator.comma.ts",
            "punctuation.separator.comma.tsx",
            "punctuation.definition.template-expression.begin.js",
            "punctuation.definition.template-expression.end.js",
            "punctuation.section.embedded.begin.js",
            "punctuation.section.embedded.begin.ts",
            "punctuation.section.embedded.begin.tsx",
            "punctuation.section.embedded.end.js",
            "punctuation.section.embedded.end.ts",
            "punctuation.section.embedded.end.tsx",
            "punctuation.definition.binding-pattern.array.js",
            "punctuation.definition.binding-pattern.array.ts",
            "punctuation.definition.binding-pattern.array.tsx",
            "punctuation.separator.comma.js",
            "punctuation.definition.block.js",
            "punctuation.definition.block.ts",
            "punctuation.definition.block.tsx",
            "punctuation.definition.binding-pattern.object.js",
            "punctuation.definition.binding-pattern.object.ts",
            "punctuation.definition.binding-pattern.object.tsx",
            "punctuation.definition.parameters.begin.js",
            "punctuation.definition.parameters.begin.ts",
            "punctuation.definition.parameters.begin.tsx",
            "punctuation.definition.parameters.end.js",
            "punctuation.definition.parameters.end.ts",
            "punctuation.definition.parameters.end.tsx",
            "storage.type.function.arrow.js",
            "storage.type.function.arrow.ts",
            "storage.type.function.arrow.tsx",
            "keyword.operator.spread.js",
            "keyword.operator.spread.ts",
            "keyword.operator.spread.tsx",
            "meta.brace.square.js",
            "meta.brace.square.ts",
            "meta.brace.square.tsx",
            "punctuation.separator.key-value.js",
            "punctuation.separator.key-value.ts",
            "punctuation.separator.key-value.tsx",
            "punctuation.accessor.js",
            "punctuation.accessor.ts",
            "punctuation.accessor.tsx"
          ],
          "settings": {
            "foreground": "#D7DBE0AB"
          }
        },
        {
          "name": "Imports",
          "scope": [
            "meta.import.js string",
            "meta.import.js variable",
            "meta.import.js meta.block variable.other",
            "meta.import.tsx",
            "meta.import.tsx string",
            "meta.import.tsx variable",
            "meta.import.tsx meta.block variable.other",
            "meta.import.ts",
            "meta.import.ts string",
            "meta.import.ts variable",
            "meta.import.ts meta.block variable.other",
            "meta.import.ts keyword.control.type.ts",
            "meta.import.tsx keyword.control.type.tsx",
            "meta.import.ts variable.other.readwrite.alias.ts",
            "meta.import.tsx variable.other.readwrite.alias.tsx",
            "meta.import.js string.quoted.single.js",
            "meta.import.ts string.quoted.single.ts",
            "meta.import.tsx string.quoted.single.tsx",
            "meta.import.js string.quoted.double.js",
            "meta.import.ts string.quoted.double.ts",
            "meta.import.tsx string.quoted.double.tsx",
            "meta.import.js variable.other.readwrite.alias.js",
            "meta.import.js constant.language.import-export-all.js",
            "meta.export.js variable.other.readwrite.alias.js",
            "meta.export.js string.quoted.single.js",
            "meta.export.js keyword.control.default.js",
            "constant.language.import-export-all.ts",
            "constant.language.import-export-all.tsx"
          ],
          "settings": {
            "foreground": "#8BADC1"
          }
        },
        {
          "scope": [
            "meta.import.js",
            "punctuation.terminator.statement.js",
            "punctuation.terminator.statement.ts",
            "punctuation.terminator.statement.tsx",
            "keyword.control.import.js",
            "keyword.control.from.js",
            "keyword.control.import.tsx",
            "keyword.control.from.tsx",
            "keyword.control.import.ts",
            "keyword.control.from.ts",
            "meta.import.ts punctuation.definition.block.ts",
            "meta.import.tsx punctuation.definition.block.tsx",
            "meta.import.js punctuation.definition.string.begin.js",
            "meta.import.js punctuation.definition.string.end.js",
            "meta.import.tsx punctuation.definition.string.begin.tsx",
            "meta.import.tsx punctuation.definition.string.end.tsx",
            "meta.import.ts punctuation.definition.string.begin.ts",
            "meta.import.ts punctuation.definition.string.end.ts",
            "meta.import.js punctuation.definition.block.js",
            "meta.import.ts punctuation.definition.block.ts",
            "meta.import.tsx punctuation.definition.block.tsx",
            "meta.import.js punctuation.separator.comma.js",
            "meta.import.ts punctuation.separator.comma.ts",
            "meta.import.tsx punctuation.separator.comma.tsx",
            "meta.export.js keyword.control.export.js",
            "meta.export.js punctuation.definition.block.js",
            "meta.export.js punctuation.definition.string.begin.js",
            "meta.export.js punctuation.definition.string.end.js",
            "keyword.control.as.js",
            "keyword.control.as.ts",
            "keyword.control.as.tsx",
            "comment.line.double-slash.js",
            "comment.line.double-slash.ts",
            "comment.line.double-slash.tsx",
            "comment.block.documentation.js",
            "comment.block.documentation.ts",
            "comment.block.documentation.tsx"
          ],
          "settings": {
            "foreground": "#8BADC180"
          }
        }
      ]
    }
  },
  "explorer.confirmDelete": false,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "[dockercompose]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "workbench.iconTheme": "eq-material-theme-icons-ocean",
  "git.autofetch": true,
  "playwright.reuseBrowser": true,
  "[python]": {
    "editor.formatOnType": true
  },
  "git.confirmSync": false,
  "editor.inlineSuggest.enabled": true,
  "thunder-client.customLocation": "$HOME/thunder-client",
  "redhat.telemetry.enabled": false,
  "diffEditor.ignoreTrimWhitespace": false,
  "github.copilot.enable": {
    "*": true,
    "plaintext": true,
    "markdown": false,
    "scminput": false
  },
  "svelte.enable-ts-plugin": true,
  "workbench.startupEditor": "none",
  "window.menuBarVisibility": "toggle"
}
